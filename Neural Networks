{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Week10HW(602)_Diaz_Stefan.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyN+GH7XN54R/ivyONui5wSI",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sdiaz8/sdiaz8/blob/main/Neural%20Networks\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7bCpJjoOq5wY"
      },
      "outputs": [],
      "source": [
        "#import libraries\n",
        "import numpy as np  \n",
        "import pandas as pd \n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "import seaborn as sns \n",
        "from tensorflow.keras.layers import Dense, Dropout, Activation \n",
        "from tensorflow.keras.models import Model, Sequential \n",
        "from tensorflow.keras.optimizers import Adam"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Load Diabetes Database\n",
        "data = pd.read_csv('/content/diabetes2.csv')\n",
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "C1UfGO0EulHu",
        "outputId": "02f9f2b3-1937-49cf-bf8a-f6ed52f85cc9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n",
              "0            6      148             72             35        0 33.60   \n",
              "1            1       85             66             29        0 26.60   \n",
              "2            8      183             64              0        0 23.30   \n",
              "3            1       89             66             23       94 28.10   \n",
              "4            0      137             40             35      168 43.10   \n",
              "\n",
              "   DiabetesPedigreeFunction  Age  Outcome  \n",
              "0                      0.63   50        1  \n",
              "1                      0.35   31        0  \n",
              "2                      0.67   32        1  \n",
              "3                      0.17   21        0  \n",
              "4                      2.29   33        1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-18ae74a3-e1a3-4e88-b3fc-2594b7f68c17\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Pregnancies</th>\n",
              "      <th>Glucose</th>\n",
              "      <th>BloodPressure</th>\n",
              "      <th>SkinThickness</th>\n",
              "      <th>Insulin</th>\n",
              "      <th>BMI</th>\n",
              "      <th>DiabetesPedigreeFunction</th>\n",
              "      <th>Age</th>\n",
              "      <th>Outcome</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6</td>\n",
              "      <td>148</td>\n",
              "      <td>72</td>\n",
              "      <td>35</td>\n",
              "      <td>0</td>\n",
              "      <td>33.60</td>\n",
              "      <td>0.63</td>\n",
              "      <td>50</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>85</td>\n",
              "      <td>66</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>26.60</td>\n",
              "      <td>0.35</td>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8</td>\n",
              "      <td>183</td>\n",
              "      <td>64</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>23.30</td>\n",
              "      <td>0.67</td>\n",
              "      <td>32</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>89</td>\n",
              "      <td>66</td>\n",
              "      <td>23</td>\n",
              "      <td>94</td>\n",
              "      <td>28.10</td>\n",
              "      <td>0.17</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>137</td>\n",
              "      <td>40</td>\n",
              "      <td>35</td>\n",
              "      <td>168</td>\n",
              "      <td>43.10</td>\n",
              "      <td>2.29</td>\n",
              "      <td>33</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-18ae74a3-e1a3-4e88-b3fc-2594b7f68c17')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-18ae74a3-e1a3-4e88-b3fc-2594b7f68c17 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-18ae74a3-e1a3-4e88-b3fc-2594b7f68c17');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#create a histogram for all variables\n",
        "\n",
        "fig, axes = plt.subplots(3, 3, figsize=(15, 10))\n",
        "\n",
        "sns.histplot(ax=axes[0, 0], data=data, x='Pregnancies')\n",
        "sns.histplot(ax=axes[0, 1], data=data, x='Glucose')\n",
        "sns.histplot(ax=axes[0, 2], data=data, x='BloodPressure')\n",
        "sns.histplot(ax=axes[1, 0], data=data, x='SkinThickness')\n",
        "sns.histplot(ax=axes[1, 1], data=data, x='Insulin')\n",
        "sns.histplot(ax=axes[1, 2], data=data, x='BMI')\n",
        "sns.histplot(ax=axes[2, 0], data=data, x='DiabetesPedigreeFunction')\n",
        "sns.histplot(ax=axes[2, 1], data=data, x='Age')\n",
        "sns.histplot(ax=axes[2, 2], data=data, x='Outcome')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 624
        },
        "id": "zKsp42P-6pKj",
        "outputId": "d1b8f1e3-7b69-4228-cfa9-b28ba7becc5e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7ff51f5c8cd0>"
            ]
          },
          "metadata": {},
          "execution_count": 45
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x720 with 9 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#create a density plot for all variables, visualize the distribution between \n",
        "#diabetic and non diabetic patients drop the 9th subplot\n",
        "\n",
        "fig, axes = plt.subplots(3, 3, figsize=(15, 10))\n",
        "\n",
        "sns.kdeplot(ax=axes[0, 0], data=data, x='Pregnancies', y='Outcome')\n",
        "sns.kdeplot(ax=axes[0, 1], data=data, x='Glucose', y='Outcome')\n",
        "sns.kdeplot(ax=axes[0, 2], data=data, x='BloodPressure', y='Outcome')\n",
        "sns.kdeplot(ax=axes[1, 0], data=data, x='SkinThickness', y='Outcome')\n",
        "sns.kdeplot(ax=axes[1, 1], data=data, x='Insulin', y='Outcome')\n",
        "sns.kdeplot(ax=axes[1, 2], data=data, x='BMI', y='Outcome')\n",
        "sns.kdeplot(ax=axes[2, 0], data=data, x='DiabetesPedigreeFunction', y='Outcome')\n",
        "sns.kdeplot(ax=axes[2, 1], data=data, x='Age', y='Outcome')\n",
        "sns.kdeplot(ax=axes[2, 2], data=data, x='Pregnancies', y='Outcome').set_visible(False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 606
        },
        "id": "DZg9ZrVY3djq",
        "outputId": "6943e742-d654-4912-e277-a34cd4c2955f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x720 with 9 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Check for null data\n",
        "data.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hcHTUCyG8QDi",
        "outputId": "f8d29ddc-4c65-4415-be0b-6dfaa510de05"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Pregnancies                 0\n",
              "Glucose                     0\n",
              "BloodPressure               0\n",
              "SkinThickness               0\n",
              "Insulin                     0\n",
              "BMI                         0\n",
              "DiabetesPedigreeFunction    0\n",
              "Age                         0\n",
              "Outcome                     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Replace zero with NaN, recheck data\n",
        "data2=data[['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin',\n",
        "      'BMI','DiabetesPedigreeFunction','Age']].replace(0, np.nan)\n",
        "data2.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "ckIBjZFvVU-w",
        "outputId": "0ddb024f-5cde-4449-92f9-e880abb734ff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n",
              "0         6.00   148.00          72.00          35.00      nan 33.60   \n",
              "1         1.00    85.00          66.00          29.00      nan 26.60   \n",
              "2         8.00   183.00          64.00            nan      nan 23.30   \n",
              "3         1.00    89.00          66.00          23.00    94.00 28.10   \n",
              "4          nan   137.00          40.00          35.00   168.00 43.10   \n",
              "\n",
              "   DiabetesPedigreeFunction  Age  \n",
              "0                      0.63   50  \n",
              "1                      0.35   31  \n",
              "2                      0.67   32  \n",
              "3                      0.17   21  \n",
              "4                      2.29   33  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4e9b1a90-0b68-46b0-b66a-791cda6b394f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Pregnancies</th>\n",
              "      <th>Glucose</th>\n",
              "      <th>BloodPressure</th>\n",
              "      <th>SkinThickness</th>\n",
              "      <th>Insulin</th>\n",
              "      <th>BMI</th>\n",
              "      <th>DiabetesPedigreeFunction</th>\n",
              "      <th>Age</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6.00</td>\n",
              "      <td>148.00</td>\n",
              "      <td>72.00</td>\n",
              "      <td>35.00</td>\n",
              "      <td>nan</td>\n",
              "      <td>33.60</td>\n",
              "      <td>0.63</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.00</td>\n",
              "      <td>85.00</td>\n",
              "      <td>66.00</td>\n",
              "      <td>29.00</td>\n",
              "      <td>nan</td>\n",
              "      <td>26.60</td>\n",
              "      <td>0.35</td>\n",
              "      <td>31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8.00</td>\n",
              "      <td>183.00</td>\n",
              "      <td>64.00</td>\n",
              "      <td>nan</td>\n",
              "      <td>nan</td>\n",
              "      <td>23.30</td>\n",
              "      <td>0.67</td>\n",
              "      <td>32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.00</td>\n",
              "      <td>89.00</td>\n",
              "      <td>66.00</td>\n",
              "      <td>23.00</td>\n",
              "      <td>94.00</td>\n",
              "      <td>28.10</td>\n",
              "      <td>0.17</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>nan</td>\n",
              "      <td>137.00</td>\n",
              "      <td>40.00</td>\n",
              "      <td>35.00</td>\n",
              "      <td>168.00</td>\n",
              "      <td>43.10</td>\n",
              "      <td>2.29</td>\n",
              "      <td>33</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e9b1a90-0b68-46b0-b66a-791cda6b394f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4e9b1a90-0b68-46b0-b66a-791cda6b394f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4e9b1a90-0b68-46b0-b66a-791cda6b394f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Replace NaN values with the column mean\n",
        "data2.fillna(data.mean(), inplace=True)\n",
        "data2.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "sF0ZRq8QWPkm",
        "outputId": "a830811a-7960-4944-b819-34c9d8d90f3c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n",
              "0         6.00   148.00          72.00          35.00    79.80 33.60   \n",
              "1         1.00    85.00          66.00          29.00    79.80 26.60   \n",
              "2         8.00   183.00          64.00          20.54    79.80 23.30   \n",
              "3         1.00    89.00          66.00          23.00    94.00 28.10   \n",
              "4         3.85   137.00          40.00          35.00   168.00 43.10   \n",
              "\n",
              "   DiabetesPedigreeFunction  Age  \n",
              "0                      0.63   50  \n",
              "1                      0.35   31  \n",
              "2                      0.67   32  \n",
              "3                      0.17   21  \n",
              "4                      2.29   33  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6fa9d211-0885-4001-ac0c-fe0251fec8b0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Pregnancies</th>\n",
              "      <th>Glucose</th>\n",
              "      <th>BloodPressure</th>\n",
              "      <th>SkinThickness</th>\n",
              "      <th>Insulin</th>\n",
              "      <th>BMI</th>\n",
              "      <th>DiabetesPedigreeFunction</th>\n",
              "      <th>Age</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6.00</td>\n",
              "      <td>148.00</td>\n",
              "      <td>72.00</td>\n",
              "      <td>35.00</td>\n",
              "      <td>79.80</td>\n",
              "      <td>33.60</td>\n",
              "      <td>0.63</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.00</td>\n",
              "      <td>85.00</td>\n",
              "      <td>66.00</td>\n",
              "      <td>29.00</td>\n",
              "      <td>79.80</td>\n",
              "      <td>26.60</td>\n",
              "      <td>0.35</td>\n",
              "      <td>31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8.00</td>\n",
              "      <td>183.00</td>\n",
              "      <td>64.00</td>\n",
              "      <td>20.54</td>\n",
              "      <td>79.80</td>\n",
              "      <td>23.30</td>\n",
              "      <td>0.67</td>\n",
              "      <td>32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.00</td>\n",
              "      <td>89.00</td>\n",
              "      <td>66.00</td>\n",
              "      <td>23.00</td>\n",
              "      <td>94.00</td>\n",
              "      <td>28.10</td>\n",
              "      <td>0.17</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3.85</td>\n",
              "      <td>137.00</td>\n",
              "      <td>40.00</td>\n",
              "      <td>35.00</td>\n",
              "      <td>168.00</td>\n",
              "      <td>43.10</td>\n",
              "      <td>2.29</td>\n",
              "      <td>33</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6fa9d211-0885-4001-ac0c-fe0251fec8b0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6fa9d211-0885-4001-ac0c-fe0251fec8b0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6fa9d211-0885-4001-ac0c-fe0251fec8b0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#determining X and Y\n",
        "X = data2.values\n",
        "Y = data[['Outcome']].values "
      ],
      "metadata": {
        "id": "G0ejdpSQ-UQ5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#create a train and test dataset(80/20)\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2)"
      ],
      "metadata": {
        "id": "HGsXsM4ouZ6n"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Standardizing variables\n",
        "from sklearn.preprocessing import StandardScaler \n",
        "sc = StandardScaler()  \n",
        "X_train = sc.fit_transform(X_train) \n",
        "X_test = sc.transform(X_test)"
      ],
      "metadata": {
        "id": "e9lzaAlyM7Qm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Take a look at mean, std, etc. of all the transformed variables\n",
        "df = pd.DataFrame(X_train, columns = ['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age'])\n",
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "o2QlQC9LM-AQ",
        "outputId": "4fbd8cea-9bec-49bd-9802-fb31a3b6b1da"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin    BMI  \\\n",
              "count       614.00   614.00         614.00         614.00   614.00 614.00   \n",
              "mean         -0.00    -0.00           0.00          -0.00     0.00   0.00   \n",
              "std           1.00     1.00           1.00           1.00     1.00   1.00   \n",
              "min          -1.14    -2.51          -3.88          -2.01    -1.21  -2.01   \n",
              "25%          -0.79    -0.70          -0.65          -0.61    -0.41  -0.72   \n",
              "50%          -0.16    -0.14           0.00          -0.46    -0.41  -0.06   \n",
              "75%           0.57     0.58           0.65           0.58     0.14   0.58   \n",
              "max           4.34     2.59           4.05           7.51     7.59   4.90   \n",
              "\n",
              "       DiabetesPedigreeFunction    Age  \n",
              "count                    614.00 614.00  \n",
              "mean                       0.00   0.00  \n",
              "std                        1.00   1.00  \n",
              "min                       -1.17  -1.02  \n",
              "25%                       -0.69  -0.76  \n",
              "50%                       -0.28  -0.33  \n",
              "75%                        0.41   0.61  \n",
              "max                        5.78   4.12  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3f52dec2-7a58-453b-a0d7-41ba7f230cd3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Pregnancies</th>\n",
              "      <th>Glucose</th>\n",
              "      <th>BloodPressure</th>\n",
              "      <th>SkinThickness</th>\n",
              "      <th>Insulin</th>\n",
              "      <th>BMI</th>\n",
              "      <th>DiabetesPedigreeFunction</th>\n",
              "      <th>Age</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>614.00</td>\n",
              "      <td>614.00</td>\n",
              "      <td>614.00</td>\n",
              "      <td>614.00</td>\n",
              "      <td>614.00</td>\n",
              "      <td>614.00</td>\n",
              "      <td>614.00</td>\n",
              "      <td>614.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-1.14</td>\n",
              "      <td>-2.51</td>\n",
              "      <td>-3.88</td>\n",
              "      <td>-2.01</td>\n",
              "      <td>-1.21</td>\n",
              "      <td>-2.01</td>\n",
              "      <td>-1.17</td>\n",
              "      <td>-1.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>-0.79</td>\n",
              "      <td>-0.70</td>\n",
              "      <td>-0.65</td>\n",
              "      <td>-0.61</td>\n",
              "      <td>-0.41</td>\n",
              "      <td>-0.72</td>\n",
              "      <td>-0.69</td>\n",
              "      <td>-0.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.14</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.46</td>\n",
              "      <td>-0.41</td>\n",
              "      <td>-0.06</td>\n",
              "      <td>-0.28</td>\n",
              "      <td>-0.33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>0.57</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.65</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.41</td>\n",
              "      <td>0.61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>4.34</td>\n",
              "      <td>2.59</td>\n",
              "      <td>4.05</td>\n",
              "      <td>7.51</td>\n",
              "      <td>7.59</td>\n",
              "      <td>4.90</td>\n",
              "      <td>5.78</td>\n",
              "      <td>4.12</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f52dec2-7a58-453b-a0d7-41ba7f230cd3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3f52dec2-7a58-453b-a0d7-41ba7f230cd3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3f52dec2-7a58-453b-a0d7-41ba7f230cd3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Creating a squential class from Keras\n",
        "def create_model(learning_rate, dropout_rate): \n",
        "  model = Sequential() \n",
        "  model.add(Dense(32, activation='relu')) \n",
        "  model.add(Dropout(dropout_rate)) \n",
        "  model.add(Dense(16, activation='relu')) \n",
        "  model.add(Dropout(dropout_rate)) \n",
        "  model.add(Dense(1, activation='sigmoid'))\n",
        "  adam = Adam(lr=learning_rate) \n",
        "  model.compile(loss='binary_crossentropy', optimizer=adam, metrics=['accuracy'])\n",
        "  return model"
      ],
      "metadata": {
        "id": "SZBKM654dLfC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Cross-entropy is used to measure the difference between two probabiltiy distributions.  It refers to how far away you are from a predicted value."
      ],
      "metadata": {
        "id": "h6Wu-ZIa3zeg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#setting parameters\n",
        "dropout_rate = 0.1 \n",
        "epochs = 100\n",
        "batch_size = 1 \n",
        "learn_rate = 0.001"
      ],
      "metadata": {
        "id": "S0GuUSBy79nh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#model with 100 epochs\n",
        "model = create_model(learn_rate, dropout_rate)\n",
        "model_history = model.fit(X_train, y_train, batch_size=batch_size, epochs=epochs, validation_split=0.2, verbose=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nbF4bQwH8Dtg",
        "outputId": "8b83439a-53f7-4a54-d5fd-75f6dc37001f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "491/491 [==============================] - 2s 4ms/step - loss: 0.5576 - accuracy: 0.7108 - val_loss: 0.4893 - val_accuracy: 0.7317\n",
            "Epoch 2/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.4859 - accuracy: 0.7515 - val_loss: 0.4543 - val_accuracy: 0.7642\n",
            "Epoch 3/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4727 - accuracy: 0.7678 - val_loss: 0.4482 - val_accuracy: 0.7805\n",
            "Epoch 4/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4658 - accuracy: 0.7780 - val_loss: 0.4428 - val_accuracy: 0.7805\n",
            "Epoch 5/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4512 - accuracy: 0.7821 - val_loss: 0.4405 - val_accuracy: 0.7805\n",
            "Epoch 6/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4492 - accuracy: 0.7719 - val_loss: 0.4306 - val_accuracy: 0.7805\n",
            "Epoch 7/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4451 - accuracy: 0.7841 - val_loss: 0.4327 - val_accuracy: 0.7724\n",
            "Epoch 8/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.4229 - accuracy: 0.8126 - val_loss: 0.4292 - val_accuracy: 0.7886\n",
            "Epoch 9/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4303 - accuracy: 0.7841 - val_loss: 0.4353 - val_accuracy: 0.7805\n",
            "Epoch 10/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4399 - accuracy: 0.7963 - val_loss: 0.4468 - val_accuracy: 0.7805\n",
            "Epoch 11/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.4100 - accuracy: 0.8086 - val_loss: 0.4345 - val_accuracy: 0.7805\n",
            "Epoch 12/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4105 - accuracy: 0.8228 - val_loss: 0.4394 - val_accuracy: 0.7805\n",
            "Epoch 13/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3979 - accuracy: 0.8126 - val_loss: 0.4397 - val_accuracy: 0.7805\n",
            "Epoch 14/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4004 - accuracy: 0.8065 - val_loss: 0.4462 - val_accuracy: 0.7805\n",
            "Epoch 15/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4030 - accuracy: 0.7923 - val_loss: 0.4582 - val_accuracy: 0.7724\n",
            "Epoch 16/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4135 - accuracy: 0.7963 - val_loss: 0.4535 - val_accuracy: 0.7805\n",
            "Epoch 17/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4042 - accuracy: 0.7963 - val_loss: 0.4483 - val_accuracy: 0.7724\n",
            "Epoch 18/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4046 - accuracy: 0.8147 - val_loss: 0.4566 - val_accuracy: 0.7805\n",
            "Epoch 19/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3938 - accuracy: 0.8167 - val_loss: 0.4632 - val_accuracy: 0.7886\n",
            "Epoch 20/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3911 - accuracy: 0.8228 - val_loss: 0.4583 - val_accuracy: 0.7886\n",
            "Epoch 21/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3959 - accuracy: 0.8086 - val_loss: 0.4555 - val_accuracy: 0.7724\n",
            "Epoch 22/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3793 - accuracy: 0.8310 - val_loss: 0.4737 - val_accuracy: 0.7805\n",
            "Epoch 23/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.4110 - accuracy: 0.8187 - val_loss: 0.4746 - val_accuracy: 0.7886\n",
            "Epoch 24/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3824 - accuracy: 0.8208 - val_loss: 0.4568 - val_accuracy: 0.7805\n",
            "Epoch 25/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3746 - accuracy: 0.8228 - val_loss: 0.4709 - val_accuracy: 0.7967\n",
            "Epoch 26/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3678 - accuracy: 0.8350 - val_loss: 0.4716 - val_accuracy: 0.7724\n",
            "Epoch 27/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3718 - accuracy: 0.8147 - val_loss: 0.4680 - val_accuracy: 0.8049\n",
            "Epoch 28/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3792 - accuracy: 0.8187 - val_loss: 0.4698 - val_accuracy: 0.7805\n",
            "Epoch 29/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3618 - accuracy: 0.8350 - val_loss: 0.4668 - val_accuracy: 0.7886\n",
            "Epoch 30/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3756 - accuracy: 0.8024 - val_loss: 0.4674 - val_accuracy: 0.7886\n",
            "Epoch 31/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3565 - accuracy: 0.8411 - val_loss: 0.4884 - val_accuracy: 0.7805\n",
            "Epoch 32/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3798 - accuracy: 0.8106 - val_loss: 0.4674 - val_accuracy: 0.7886\n",
            "Epoch 33/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3702 - accuracy: 0.8289 - val_loss: 0.4824 - val_accuracy: 0.7805\n",
            "Epoch 34/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3526 - accuracy: 0.8248 - val_loss: 0.4919 - val_accuracy: 0.8130\n",
            "Epoch 35/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3475 - accuracy: 0.8493 - val_loss: 0.4844 - val_accuracy: 0.7967\n",
            "Epoch 36/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3595 - accuracy: 0.8350 - val_loss: 0.4885 - val_accuracy: 0.7805\n",
            "Epoch 37/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3537 - accuracy: 0.8432 - val_loss: 0.4896 - val_accuracy: 0.7886\n",
            "Epoch 38/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3439 - accuracy: 0.8310 - val_loss: 0.4917 - val_accuracy: 0.7886\n",
            "Epoch 39/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3514 - accuracy: 0.8330 - val_loss: 0.4650 - val_accuracy: 0.7805\n",
            "Epoch 40/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3415 - accuracy: 0.8411 - val_loss: 0.4811 - val_accuracy: 0.7805\n",
            "Epoch 41/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3523 - accuracy: 0.8411 - val_loss: 0.4700 - val_accuracy: 0.7886\n",
            "Epoch 42/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3368 - accuracy: 0.8473 - val_loss: 0.4736 - val_accuracy: 0.7724\n",
            "Epoch 43/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3495 - accuracy: 0.8350 - val_loss: 0.4790 - val_accuracy: 0.7967\n",
            "Epoch 44/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3156 - accuracy: 0.8574 - val_loss: 0.4832 - val_accuracy: 0.7724\n",
            "Epoch 45/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3311 - accuracy: 0.8534 - val_loss: 0.4992 - val_accuracy: 0.7642\n",
            "Epoch 46/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3242 - accuracy: 0.8452 - val_loss: 0.4842 - val_accuracy: 0.7561\n",
            "Epoch 47/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3382 - accuracy: 0.8411 - val_loss: 0.4892 - val_accuracy: 0.7642\n",
            "Epoch 48/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3422 - accuracy: 0.8371 - val_loss: 0.5219 - val_accuracy: 0.7886\n",
            "Epoch 49/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3309 - accuracy: 0.8371 - val_loss: 0.5048 - val_accuracy: 0.7724\n",
            "Epoch 50/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3330 - accuracy: 0.8513 - val_loss: 0.4954 - val_accuracy: 0.7724\n",
            "Epoch 51/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3265 - accuracy: 0.8350 - val_loss: 0.5158 - val_accuracy: 0.7886\n",
            "Epoch 52/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3208 - accuracy: 0.8493 - val_loss: 0.5009 - val_accuracy: 0.7642\n",
            "Epoch 53/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3149 - accuracy: 0.8635 - val_loss: 0.4909 - val_accuracy: 0.7642\n",
            "Epoch 54/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3189 - accuracy: 0.8635 - val_loss: 0.5161 - val_accuracy: 0.7805\n",
            "Epoch 55/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3055 - accuracy: 0.8717 - val_loss: 0.5217 - val_accuracy: 0.7642\n",
            "Epoch 56/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3115 - accuracy: 0.8595 - val_loss: 0.5127 - val_accuracy: 0.7805\n",
            "Epoch 57/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3256 - accuracy: 0.8432 - val_loss: 0.5100 - val_accuracy: 0.7886\n",
            "Epoch 58/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2993 - accuracy: 0.8758 - val_loss: 0.5219 - val_accuracy: 0.7967\n",
            "Epoch 59/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3132 - accuracy: 0.8595 - val_loss: 0.5427 - val_accuracy: 0.7805\n",
            "Epoch 60/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3044 - accuracy: 0.8595 - val_loss: 0.5612 - val_accuracy: 0.7480\n",
            "Epoch 61/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3170 - accuracy: 0.8574 - val_loss: 0.5413 - val_accuracy: 0.7480\n",
            "Epoch 62/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3091 - accuracy: 0.8635 - val_loss: 0.5557 - val_accuracy: 0.7642\n",
            "Epoch 63/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2923 - accuracy: 0.8615 - val_loss: 0.5577 - val_accuracy: 0.7724\n",
            "Epoch 64/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3112 - accuracy: 0.8717 - val_loss: 0.5525 - val_accuracy: 0.7642\n",
            "Epoch 65/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3095 - accuracy: 0.8554 - val_loss: 0.5698 - val_accuracy: 0.7724\n",
            "Epoch 66/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2993 - accuracy: 0.8615 - val_loss: 0.5446 - val_accuracy: 0.7724\n",
            "Epoch 67/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.3165 - accuracy: 0.8432 - val_loss: 0.5358 - val_accuracy: 0.7398\n",
            "Epoch 68/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2953 - accuracy: 0.8656 - val_loss: 0.5560 - val_accuracy: 0.7561\n",
            "Epoch 69/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2992 - accuracy: 0.8574 - val_loss: 0.5238 - val_accuracy: 0.7561\n",
            "Epoch 70/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2733 - accuracy: 0.8900 - val_loss: 0.5526 - val_accuracy: 0.7642\n",
            "Epoch 71/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2613 - accuracy: 0.8717 - val_loss: 0.5800 - val_accuracy: 0.7642\n",
            "Epoch 72/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2774 - accuracy: 0.8697 - val_loss: 0.5737 - val_accuracy: 0.7561\n",
            "Epoch 73/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2776 - accuracy: 0.8798 - val_loss: 0.5539 - val_accuracy: 0.7561\n",
            "Epoch 74/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2723 - accuracy: 0.8778 - val_loss: 0.5915 - val_accuracy: 0.7642\n",
            "Epoch 75/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3033 - accuracy: 0.8595 - val_loss: 0.5905 - val_accuracy: 0.7480\n",
            "Epoch 76/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.3153 - accuracy: 0.8513 - val_loss: 0.5851 - val_accuracy: 0.7805\n",
            "Epoch 77/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2757 - accuracy: 0.8676 - val_loss: 0.5971 - val_accuracy: 0.7642\n",
            "Epoch 78/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2864 - accuracy: 0.8697 - val_loss: 0.6079 - val_accuracy: 0.7805\n",
            "Epoch 79/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2727 - accuracy: 0.8900 - val_loss: 0.6130 - val_accuracy: 0.7805\n",
            "Epoch 80/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2791 - accuracy: 0.8859 - val_loss: 0.6043 - val_accuracy: 0.7805\n",
            "Epoch 81/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2909 - accuracy: 0.8615 - val_loss: 0.5990 - val_accuracy: 0.7480\n",
            "Epoch 82/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2704 - accuracy: 0.8737 - val_loss: 0.5824 - val_accuracy: 0.7398\n",
            "Epoch 83/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2731 - accuracy: 0.8839 - val_loss: 0.6266 - val_accuracy: 0.7561\n",
            "Epoch 84/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2897 - accuracy: 0.8697 - val_loss: 0.5889 - val_accuracy: 0.7480\n",
            "Epoch 85/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2917 - accuracy: 0.8635 - val_loss: 0.6040 - val_accuracy: 0.7724\n",
            "Epoch 86/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2667 - accuracy: 0.8758 - val_loss: 0.5982 - val_accuracy: 0.7724\n",
            "Epoch 87/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2802 - accuracy: 0.8697 - val_loss: 0.6044 - val_accuracy: 0.7398\n",
            "Epoch 88/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2917 - accuracy: 0.8819 - val_loss: 0.5794 - val_accuracy: 0.7480\n",
            "Epoch 89/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2657 - accuracy: 0.8737 - val_loss: 0.6451 - val_accuracy: 0.7886\n",
            "Epoch 90/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2772 - accuracy: 0.8635 - val_loss: 0.6425 - val_accuracy: 0.7642\n",
            "Epoch 91/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2695 - accuracy: 0.8839 - val_loss: 0.6200 - val_accuracy: 0.7642\n",
            "Epoch 92/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2793 - accuracy: 0.8758 - val_loss: 0.6681 - val_accuracy: 0.7724\n",
            "Epoch 93/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2784 - accuracy: 0.8758 - val_loss: 0.6391 - val_accuracy: 0.7561\n",
            "Epoch 94/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2802 - accuracy: 0.8859 - val_loss: 0.6485 - val_accuracy: 0.7642\n",
            "Epoch 95/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2725 - accuracy: 0.8839 - val_loss: 0.6637 - val_accuracy: 0.7398\n",
            "Epoch 96/100\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2408 - accuracy: 0.8717 - val_loss: 0.6942 - val_accuracy: 0.7561\n",
            "Epoch 97/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2559 - accuracy: 0.8941 - val_loss: 0.6856 - val_accuracy: 0.7886\n",
            "Epoch 98/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2642 - accuracy: 0.8921 - val_loss: 0.6566 - val_accuracy: 0.7642\n",
            "Epoch 99/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2724 - accuracy: 0.8778 - val_loss: 0.6501 - val_accuracy: 0.7886\n",
            "Epoch 100/100\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2749 - accuracy: 0.8758 - val_loss: 0.6183 - val_accuracy: 0.7805\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#setting 200 epochs\n",
        "epochs=200"
      ],
      "metadata": {
        "id": "ReDLZZhZ9SG_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#model with 200 epochs\n",
        "model_history = model.fit(X_train, y_train, batch_size=batch_size, epochs=epochs, validation_split=0.2, verbose=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9e5jmHtx9Wpq",
        "outputId": "b24d3554-7131-44a0-ee63-06d0d7fe71e5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2551 - accuracy: 0.8798 - val_loss: 0.6524 - val_accuracy: 0.7724\n",
            "Epoch 2/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2504 - accuracy: 0.8859 - val_loss: 0.6541 - val_accuracy: 0.7561\n",
            "Epoch 3/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2409 - accuracy: 0.8921 - val_loss: 0.6965 - val_accuracy: 0.7642\n",
            "Epoch 4/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2272 - accuracy: 0.9084 - val_loss: 0.6879 - val_accuracy: 0.7642\n",
            "Epoch 5/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2437 - accuracy: 0.8900 - val_loss: 0.6660 - val_accuracy: 0.7724\n",
            "Epoch 6/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2609 - accuracy: 0.8554 - val_loss: 0.6862 - val_accuracy: 0.7561\n",
            "Epoch 7/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2608 - accuracy: 0.8798 - val_loss: 0.6621 - val_accuracy: 0.7724\n",
            "Epoch 8/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2471 - accuracy: 0.8900 - val_loss: 0.6419 - val_accuracy: 0.7642\n",
            "Epoch 9/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2482 - accuracy: 0.9043 - val_loss: 0.6641 - val_accuracy: 0.7724\n",
            "Epoch 10/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2472 - accuracy: 0.8859 - val_loss: 0.7211 - val_accuracy: 0.7805\n",
            "Epoch 11/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2581 - accuracy: 0.8697 - val_loss: 0.6702 - val_accuracy: 0.7805\n",
            "Epoch 12/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2619 - accuracy: 0.8880 - val_loss: 0.7097 - val_accuracy: 0.7642\n",
            "Epoch 13/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2411 - accuracy: 0.8839 - val_loss: 0.7184 - val_accuracy: 0.7805\n",
            "Epoch 14/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2502 - accuracy: 0.8819 - val_loss: 0.7570 - val_accuracy: 0.7805\n",
            "Epoch 15/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2073 - accuracy: 0.9084 - val_loss: 0.7690 - val_accuracy: 0.7561\n",
            "Epoch 16/200\n",
            "491/491 [==============================] - 1s 2ms/step - loss: 0.2419 - accuracy: 0.8859 - val_loss: 0.7146 - val_accuracy: 0.7805\n",
            "Epoch 17/200\n",
            "491/491 [==============================] - 1s 2ms/step - loss: 0.2617 - accuracy: 0.8839 - val_loss: 0.6901 - val_accuracy: 0.7805\n",
            "Epoch 18/200\n",
            "491/491 [==============================] - 1s 2ms/step - loss: 0.2530 - accuracy: 0.8982 - val_loss: 0.7160 - val_accuracy: 0.7724\n",
            "Epoch 19/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2367 - accuracy: 0.8961 - val_loss: 0.7443 - val_accuracy: 0.7967\n",
            "Epoch 20/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2556 - accuracy: 0.8900 - val_loss: 0.7225 - val_accuracy: 0.7642\n",
            "Epoch 21/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2343 - accuracy: 0.8961 - val_loss: 0.7408 - val_accuracy: 0.7724\n",
            "Epoch 22/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2419 - accuracy: 0.8921 - val_loss: 0.7694 - val_accuracy: 0.7561\n",
            "Epoch 23/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2520 - accuracy: 0.8798 - val_loss: 0.7624 - val_accuracy: 0.7805\n",
            "Epoch 24/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2267 - accuracy: 0.9104 - val_loss: 0.7577 - val_accuracy: 0.7724\n",
            "Epoch 25/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2285 - accuracy: 0.9104 - val_loss: 0.7876 - val_accuracy: 0.7805\n",
            "Epoch 26/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2465 - accuracy: 0.8900 - val_loss: 0.7506 - val_accuracy: 0.7642\n",
            "Epoch 27/200\n",
            "491/491 [==============================] - 1s 2ms/step - loss: 0.2406 - accuracy: 0.9002 - val_loss: 0.7537 - val_accuracy: 0.7724\n",
            "Epoch 28/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2406 - accuracy: 0.9002 - val_loss: 0.7284 - val_accuracy: 0.7480\n",
            "Epoch 29/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2285 - accuracy: 0.9043 - val_loss: 0.7994 - val_accuracy: 0.7724\n",
            "Epoch 30/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2400 - accuracy: 0.8941 - val_loss: 0.7624 - val_accuracy: 0.7724\n",
            "Epoch 31/200\n",
            "491/491 [==============================] - 1s 2ms/step - loss: 0.2288 - accuracy: 0.9063 - val_loss: 0.7918 - val_accuracy: 0.7805\n",
            "Epoch 32/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2081 - accuracy: 0.9124 - val_loss: 0.8119 - val_accuracy: 0.7886\n",
            "Epoch 33/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2312 - accuracy: 0.8961 - val_loss: 0.8287 - val_accuracy: 0.7805\n",
            "Epoch 34/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2484 - accuracy: 0.8921 - val_loss: 0.8029 - val_accuracy: 0.7642\n",
            "Epoch 35/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2215 - accuracy: 0.9104 - val_loss: 0.7795 - val_accuracy: 0.7561\n",
            "Epoch 36/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2232 - accuracy: 0.9104 - val_loss: 0.7525 - val_accuracy: 0.7967\n",
            "Epoch 37/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2418 - accuracy: 0.8859 - val_loss: 0.7629 - val_accuracy: 0.7805\n",
            "Epoch 38/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2141 - accuracy: 0.9063 - val_loss: 0.7804 - val_accuracy: 0.7561\n",
            "Epoch 39/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2242 - accuracy: 0.9063 - val_loss: 0.7439 - val_accuracy: 0.7642\n",
            "Epoch 40/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2291 - accuracy: 0.9206 - val_loss: 0.7599 - val_accuracy: 0.7805\n",
            "Epoch 41/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2301 - accuracy: 0.9063 - val_loss: 0.8015 - val_accuracy: 0.7642\n",
            "Epoch 42/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2252 - accuracy: 0.8880 - val_loss: 0.7737 - val_accuracy: 0.7805\n",
            "Epoch 43/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2277 - accuracy: 0.8880 - val_loss: 0.7717 - val_accuracy: 0.7805\n",
            "Epoch 44/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2184 - accuracy: 0.8982 - val_loss: 0.7879 - val_accuracy: 0.7480\n",
            "Epoch 45/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2095 - accuracy: 0.9063 - val_loss: 0.8130 - val_accuracy: 0.7480\n",
            "Epoch 46/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2677 - accuracy: 0.8798 - val_loss: 0.8091 - val_accuracy: 0.7642\n",
            "Epoch 47/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2205 - accuracy: 0.9104 - val_loss: 0.7810 - val_accuracy: 0.7561\n",
            "Epoch 48/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2132 - accuracy: 0.9145 - val_loss: 0.8026 - val_accuracy: 0.7724\n",
            "Epoch 49/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2001 - accuracy: 0.9145 - val_loss: 0.7983 - val_accuracy: 0.7805\n",
            "Epoch 50/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2611 - accuracy: 0.8798 - val_loss: 0.7982 - val_accuracy: 0.7561\n",
            "Epoch 51/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2388 - accuracy: 0.8819 - val_loss: 0.7803 - val_accuracy: 0.7805\n",
            "Epoch 52/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2467 - accuracy: 0.8839 - val_loss: 0.7607 - val_accuracy: 0.7805\n",
            "Epoch 53/200\n",
            "491/491 [==============================] - 1s 2ms/step - loss: 0.2257 - accuracy: 0.9043 - val_loss: 0.7746 - val_accuracy: 0.7642\n",
            "Epoch 54/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2332 - accuracy: 0.8819 - val_loss: 0.7715 - val_accuracy: 0.7724\n",
            "Epoch 55/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2054 - accuracy: 0.9124 - val_loss: 0.7799 - val_accuracy: 0.7561\n",
            "Epoch 56/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2080 - accuracy: 0.9043 - val_loss: 0.8028 - val_accuracy: 0.7561\n",
            "Epoch 57/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2344 - accuracy: 0.8982 - val_loss: 0.8132 - val_accuracy: 0.7480\n",
            "Epoch 58/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2224 - accuracy: 0.9063 - val_loss: 0.8708 - val_accuracy: 0.7642\n",
            "Epoch 59/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.1872 - accuracy: 0.9226 - val_loss: 0.8705 - val_accuracy: 0.7724\n",
            "Epoch 60/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2161 - accuracy: 0.9124 - val_loss: 0.7911 - val_accuracy: 0.7236\n",
            "Epoch 61/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1995 - accuracy: 0.9185 - val_loss: 0.8062 - val_accuracy: 0.7724\n",
            "Epoch 62/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2201 - accuracy: 0.9063 - val_loss: 0.8098 - val_accuracy: 0.7805\n",
            "Epoch 63/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1830 - accuracy: 0.9084 - val_loss: 0.8714 - val_accuracy: 0.7886\n",
            "Epoch 64/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2288 - accuracy: 0.9124 - val_loss: 0.8390 - val_accuracy: 0.7886\n",
            "Epoch 65/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2281 - accuracy: 0.9124 - val_loss: 0.8700 - val_accuracy: 0.7724\n",
            "Epoch 66/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1885 - accuracy: 0.9287 - val_loss: 0.8790 - val_accuracy: 0.7642\n",
            "Epoch 67/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1854 - accuracy: 0.9206 - val_loss: 0.9407 - val_accuracy: 0.7642\n",
            "Epoch 68/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2232 - accuracy: 0.9145 - val_loss: 0.8759 - val_accuracy: 0.7724\n",
            "Epoch 69/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2248 - accuracy: 0.9226 - val_loss: 0.8744 - val_accuracy: 0.7724\n",
            "Epoch 70/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2008 - accuracy: 0.9043 - val_loss: 0.8810 - val_accuracy: 0.7642\n",
            "Epoch 71/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2186 - accuracy: 0.9084 - val_loss: 0.8336 - val_accuracy: 0.7480\n",
            "Epoch 72/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2133 - accuracy: 0.9063 - val_loss: 0.8480 - val_accuracy: 0.7480\n",
            "Epoch 73/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1989 - accuracy: 0.9145 - val_loss: 0.8373 - val_accuracy: 0.7317\n",
            "Epoch 74/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2207 - accuracy: 0.9002 - val_loss: 0.8763 - val_accuracy: 0.7480\n",
            "Epoch 75/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2280 - accuracy: 0.9022 - val_loss: 0.8676 - val_accuracy: 0.7398\n",
            "Epoch 76/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2017 - accuracy: 0.9104 - val_loss: 0.9544 - val_accuracy: 0.7317\n",
            "Epoch 77/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2014 - accuracy: 0.9084 - val_loss: 0.9125 - val_accuracy: 0.7724\n",
            "Epoch 78/200\n",
            "491/491 [==============================] - 1s 2ms/step - loss: 0.2131 - accuracy: 0.9084 - val_loss: 0.9238 - val_accuracy: 0.7642\n",
            "Epoch 79/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1987 - accuracy: 0.9206 - val_loss: 0.9247 - val_accuracy: 0.7724\n",
            "Epoch 80/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2054 - accuracy: 0.8921 - val_loss: 0.8811 - val_accuracy: 0.7561\n",
            "Epoch 81/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2184 - accuracy: 0.9084 - val_loss: 0.8743 - val_accuracy: 0.7561\n",
            "Epoch 82/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2117 - accuracy: 0.9043 - val_loss: 0.8919 - val_accuracy: 0.7724\n",
            "Epoch 83/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1871 - accuracy: 0.9328 - val_loss: 0.8735 - val_accuracy: 0.7724\n",
            "Epoch 84/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1800 - accuracy: 0.9308 - val_loss: 0.9140 - val_accuracy: 0.7724\n",
            "Epoch 85/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1866 - accuracy: 0.9206 - val_loss: 0.9323 - val_accuracy: 0.7561\n",
            "Epoch 86/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2245 - accuracy: 0.9002 - val_loss: 0.8990 - val_accuracy: 0.7480\n",
            "Epoch 87/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1816 - accuracy: 0.9246 - val_loss: 0.9224 - val_accuracy: 0.7724\n",
            "Epoch 88/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2032 - accuracy: 0.9267 - val_loss: 0.9847 - val_accuracy: 0.7561\n",
            "Epoch 89/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1976 - accuracy: 0.9267 - val_loss: 0.9194 - val_accuracy: 0.7886\n",
            "Epoch 90/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2078 - accuracy: 0.9124 - val_loss: 0.9424 - val_accuracy: 0.7967\n",
            "Epoch 91/200\n",
            "491/491 [==============================] - 1s 2ms/step - loss: 0.2104 - accuracy: 0.9267 - val_loss: 0.9289 - val_accuracy: 0.7724\n",
            "Epoch 92/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2003 - accuracy: 0.9063 - val_loss: 0.9336 - val_accuracy: 0.7724\n",
            "Epoch 93/200\n",
            "491/491 [==============================] - 1s 2ms/step - loss: 0.2122 - accuracy: 0.9246 - val_loss: 0.9191 - val_accuracy: 0.7561\n",
            "Epoch 94/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1732 - accuracy: 0.9369 - val_loss: 0.9231 - val_accuracy: 0.7561\n",
            "Epoch 95/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1787 - accuracy: 0.9185 - val_loss: 0.9365 - val_accuracy: 0.7480\n",
            "Epoch 96/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1778 - accuracy: 0.9206 - val_loss: 0.9515 - val_accuracy: 0.7561\n",
            "Epoch 97/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1958 - accuracy: 0.9145 - val_loss: 0.9725 - val_accuracy: 0.7480\n",
            "Epoch 98/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1918 - accuracy: 0.9308 - val_loss: 0.9485 - val_accuracy: 0.7480\n",
            "Epoch 99/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1906 - accuracy: 0.9308 - val_loss: 0.9632 - val_accuracy: 0.7398\n",
            "Epoch 100/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1940 - accuracy: 0.9246 - val_loss: 0.9834 - val_accuracy: 0.7398\n",
            "Epoch 101/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1589 - accuracy: 0.9369 - val_loss: 1.0024 - val_accuracy: 0.7561\n",
            "Epoch 102/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1946 - accuracy: 0.9206 - val_loss: 0.9744 - val_accuracy: 0.7561\n",
            "Epoch 103/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.1701 - accuracy: 0.9287 - val_loss: 0.9976 - val_accuracy: 0.7561\n",
            "Epoch 104/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1616 - accuracy: 0.9348 - val_loss: 1.0145 - val_accuracy: 0.7561\n",
            "Epoch 105/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1788 - accuracy: 0.9308 - val_loss: 0.9996 - val_accuracy: 0.7480\n",
            "Epoch 106/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2143 - accuracy: 0.9165 - val_loss: 1.0075 - val_accuracy: 0.7561\n",
            "Epoch 107/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1951 - accuracy: 0.9328 - val_loss: 1.0527 - val_accuracy: 0.7805\n",
            "Epoch 108/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.1926 - accuracy: 0.9104 - val_loss: 1.0190 - val_accuracy: 0.7561\n",
            "Epoch 109/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1636 - accuracy: 0.9185 - val_loss: 1.0656 - val_accuracy: 0.7724\n",
            "Epoch 110/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1507 - accuracy: 0.9348 - val_loss: 1.0158 - val_accuracy: 0.7398\n",
            "Epoch 111/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2102 - accuracy: 0.9246 - val_loss: 1.0287 - val_accuracy: 0.7642\n",
            "Epoch 112/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1933 - accuracy: 0.9185 - val_loss: 1.0466 - val_accuracy: 0.7236\n",
            "Epoch 113/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.1832 - accuracy: 0.9369 - val_loss: 1.0197 - val_accuracy: 0.7398\n",
            "Epoch 114/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1653 - accuracy: 0.9470 - val_loss: 1.0233 - val_accuracy: 0.7480\n",
            "Epoch 115/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.2066 - accuracy: 0.9308 - val_loss: 1.0959 - val_accuracy: 0.7480\n",
            "Epoch 116/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1715 - accuracy: 0.9328 - val_loss: 1.0693 - val_accuracy: 0.7317\n",
            "Epoch 117/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1807 - accuracy: 0.9226 - val_loss: 1.0190 - val_accuracy: 0.7398\n",
            "Epoch 118/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1745 - accuracy: 0.9491 - val_loss: 1.0714 - val_accuracy: 0.7398\n",
            "Epoch 119/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.1420 - accuracy: 0.9470 - val_loss: 1.0823 - val_accuracy: 0.7317\n",
            "Epoch 120/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1662 - accuracy: 0.9389 - val_loss: 1.1070 - val_accuracy: 0.7561\n",
            "Epoch 121/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1971 - accuracy: 0.9328 - val_loss: 1.0730 - val_accuracy: 0.7642\n",
            "Epoch 122/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1818 - accuracy: 0.9470 - val_loss: 1.0758 - val_accuracy: 0.7317\n",
            "Epoch 123/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1655 - accuracy: 0.9409 - val_loss: 1.0869 - val_accuracy: 0.7398\n",
            "Epoch 124/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.1702 - accuracy: 0.9409 - val_loss: 1.0909 - val_accuracy: 0.7561\n",
            "Epoch 125/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1694 - accuracy: 0.9369 - val_loss: 1.1098 - val_accuracy: 0.7154\n",
            "Epoch 126/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1591 - accuracy: 0.9450 - val_loss: 1.0851 - val_accuracy: 0.7642\n",
            "Epoch 127/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1595 - accuracy: 0.9328 - val_loss: 1.1218 - val_accuracy: 0.7480\n",
            "Epoch 128/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2247 - accuracy: 0.9287 - val_loss: 1.1248 - val_accuracy: 0.7642\n",
            "Epoch 129/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1621 - accuracy: 0.9409 - val_loss: 1.1715 - val_accuracy: 0.7724\n",
            "Epoch 130/200\n",
            "491/491 [==============================] - 1s 2ms/step - loss: 0.2432 - accuracy: 0.9226 - val_loss: 1.1160 - val_accuracy: 0.7724\n",
            "Epoch 131/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1926 - accuracy: 0.9145 - val_loss: 1.0927 - val_accuracy: 0.7561\n",
            "Epoch 132/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1825 - accuracy: 0.9267 - val_loss: 1.1205 - val_accuracy: 0.7561\n",
            "Epoch 133/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1719 - accuracy: 0.9328 - val_loss: 1.1165 - val_accuracy: 0.7398\n",
            "Epoch 134/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1437 - accuracy: 0.9430 - val_loss: 1.1118 - val_accuracy: 0.7561\n",
            "Epoch 135/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1403 - accuracy: 0.9511 - val_loss: 1.1491 - val_accuracy: 0.7561\n",
            "Epoch 136/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2074 - accuracy: 0.9124 - val_loss: 1.1504 - val_accuracy: 0.7317\n",
            "Epoch 137/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1801 - accuracy: 0.9226 - val_loss: 1.1041 - val_accuracy: 0.7561\n",
            "Epoch 138/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1692 - accuracy: 0.9389 - val_loss: 1.1502 - val_accuracy: 0.7480\n",
            "Epoch 139/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1659 - accuracy: 0.9369 - val_loss: 1.1282 - val_accuracy: 0.7317\n",
            "Epoch 140/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1369 - accuracy: 0.9470 - val_loss: 1.1329 - val_accuracy: 0.7561\n",
            "Epoch 141/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1606 - accuracy: 0.9287 - val_loss: 1.1378 - val_accuracy: 0.7398\n",
            "Epoch 142/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1648 - accuracy: 0.9226 - val_loss: 1.2077 - val_accuracy: 0.7561\n",
            "Epoch 143/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1989 - accuracy: 0.9267 - val_loss: 1.2066 - val_accuracy: 0.7642\n",
            "Epoch 144/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1584 - accuracy: 0.9389 - val_loss: 1.2130 - val_accuracy: 0.7561\n",
            "Epoch 145/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1560 - accuracy: 0.9369 - val_loss: 1.1790 - val_accuracy: 0.7642\n",
            "Epoch 146/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1378 - accuracy: 0.9552 - val_loss: 1.1975 - val_accuracy: 0.7480\n",
            "Epoch 147/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1565 - accuracy: 0.9572 - val_loss: 1.1932 - val_accuracy: 0.7561\n",
            "Epoch 148/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1412 - accuracy: 0.9532 - val_loss: 1.1725 - val_accuracy: 0.7642\n",
            "Epoch 149/200\n",
            "491/491 [==============================] - 1s 2ms/step - loss: 0.2123 - accuracy: 0.9185 - val_loss: 1.1707 - val_accuracy: 0.7561\n",
            "Epoch 150/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1565 - accuracy: 0.9246 - val_loss: 1.1865 - val_accuracy: 0.7561\n",
            "Epoch 151/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1765 - accuracy: 0.9328 - val_loss: 1.1876 - val_accuracy: 0.7642\n",
            "Epoch 152/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1889 - accuracy: 0.9287 - val_loss: 1.1938 - val_accuracy: 0.7561\n",
            "Epoch 153/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1408 - accuracy: 0.9409 - val_loss: 1.1902 - val_accuracy: 0.7642\n",
            "Epoch 154/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1575 - accuracy: 0.9430 - val_loss: 1.2382 - val_accuracy: 0.7480\n",
            "Epoch 155/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1796 - accuracy: 0.9308 - val_loss: 1.1650 - val_accuracy: 0.7480\n",
            "Epoch 156/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1792 - accuracy: 0.9267 - val_loss: 1.1939 - val_accuracy: 0.7398\n",
            "Epoch 157/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.1778 - accuracy: 0.9267 - val_loss: 1.1851 - val_accuracy: 0.7480\n",
            "Epoch 158/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1985 - accuracy: 0.9226 - val_loss: 1.1555 - val_accuracy: 0.7398\n",
            "Epoch 159/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1717 - accuracy: 0.9226 - val_loss: 1.1639 - val_accuracy: 0.7642\n",
            "Epoch 160/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1926 - accuracy: 0.9246 - val_loss: 1.1822 - val_accuracy: 0.7561\n",
            "Epoch 161/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1873 - accuracy: 0.9287 - val_loss: 1.1394 - val_accuracy: 0.7398\n",
            "Epoch 162/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.1271 - accuracy: 0.9430 - val_loss: 1.1575 - val_accuracy: 0.7642\n",
            "Epoch 163/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1787 - accuracy: 0.9328 - val_loss: 1.1634 - val_accuracy: 0.7480\n",
            "Epoch 164/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1269 - accuracy: 0.9532 - val_loss: 1.1475 - val_accuracy: 0.7236\n",
            "Epoch 165/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.2111 - accuracy: 0.9328 - val_loss: 1.1032 - val_accuracy: 0.7642\n",
            "Epoch 166/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1802 - accuracy: 0.9287 - val_loss: 1.1191 - val_accuracy: 0.7480\n",
            "Epoch 167/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1809 - accuracy: 0.9430 - val_loss: 1.1202 - val_accuracy: 0.7561\n",
            "Epoch 168/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1443 - accuracy: 0.9450 - val_loss: 1.1594 - val_accuracy: 0.7642\n",
            "Epoch 169/200\n",
            "491/491 [==============================] - 1s 2ms/step - loss: 0.1347 - accuracy: 0.9409 - val_loss: 1.1501 - val_accuracy: 0.7561\n",
            "Epoch 170/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1581 - accuracy: 0.9369 - val_loss: 1.1249 - val_accuracy: 0.7724\n",
            "Epoch 171/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1793 - accuracy: 0.9226 - val_loss: 1.1249 - val_accuracy: 0.7398\n",
            "Epoch 172/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1878 - accuracy: 0.9226 - val_loss: 1.1364 - val_accuracy: 0.7561\n",
            "Epoch 173/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1557 - accuracy: 0.9369 - val_loss: 1.2037 - val_accuracy: 0.7561\n",
            "Epoch 174/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1596 - accuracy: 0.9348 - val_loss: 1.2101 - val_accuracy: 0.7724\n",
            "Epoch 175/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1873 - accuracy: 0.9328 - val_loss: 1.2038 - val_accuracy: 0.7561\n",
            "Epoch 176/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.1305 - accuracy: 0.9511 - val_loss: 1.2066 - val_accuracy: 0.7561\n",
            "Epoch 177/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1118 - accuracy: 0.9470 - val_loss: 1.2568 - val_accuracy: 0.7724\n",
            "Epoch 178/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1207 - accuracy: 0.9470 - val_loss: 1.2851 - val_accuracy: 0.7561\n",
            "Epoch 179/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1827 - accuracy: 0.9450 - val_loss: 1.2379 - val_accuracy: 0.7724\n",
            "Epoch 180/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1523 - accuracy: 0.9267 - val_loss: 1.2062 - val_accuracy: 0.7561\n",
            "Epoch 181/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1619 - accuracy: 0.9409 - val_loss: 1.1896 - val_accuracy: 0.7642\n",
            "Epoch 182/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1557 - accuracy: 0.9226 - val_loss: 1.2225 - val_accuracy: 0.7561\n",
            "Epoch 183/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1689 - accuracy: 0.9328 - val_loss: 1.2687 - val_accuracy: 0.7480\n",
            "Epoch 184/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1669 - accuracy: 0.9206 - val_loss: 1.2683 - val_accuracy: 0.7561\n",
            "Epoch 185/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1797 - accuracy: 0.9348 - val_loss: 1.2754 - val_accuracy: 0.7480\n",
            "Epoch 186/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.1838 - accuracy: 0.9328 - val_loss: 1.2362 - val_accuracy: 0.7561\n",
            "Epoch 187/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1366 - accuracy: 0.9511 - val_loss: 1.2320 - val_accuracy: 0.7398\n",
            "Epoch 188/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1384 - accuracy: 0.9409 - val_loss: 1.2597 - val_accuracy: 0.7642\n",
            "Epoch 189/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1429 - accuracy: 0.9369 - val_loss: 1.3115 - val_accuracy: 0.7236\n",
            "Epoch 190/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1392 - accuracy: 0.9470 - val_loss: 1.2974 - val_accuracy: 0.7317\n",
            "Epoch 191/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1168 - accuracy: 0.9552 - val_loss: 1.3282 - val_accuracy: 0.7398\n",
            "Epoch 192/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1472 - accuracy: 0.9470 - val_loss: 1.2951 - val_accuracy: 0.7317\n",
            "Epoch 193/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1488 - accuracy: 0.9511 - val_loss: 1.3119 - val_accuracy: 0.7642\n",
            "Epoch 194/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1864 - accuracy: 0.9165 - val_loss: 1.3148 - val_accuracy: 0.7398\n",
            "Epoch 195/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1720 - accuracy: 0.9348 - val_loss: 1.2613 - val_accuracy: 0.7724\n",
            "Epoch 196/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1716 - accuracy: 0.9348 - val_loss: 1.2742 - val_accuracy: 0.7398\n",
            "Epoch 197/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1732 - accuracy: 0.9389 - val_loss: 1.2984 - val_accuracy: 0.7317\n",
            "Epoch 198/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1823 - accuracy: 0.9328 - val_loss: 1.2882 - val_accuracy: 0.7561\n",
            "Epoch 199/200\n",
            "491/491 [==============================] - 2s 3ms/step - loss: 0.1592 - accuracy: 0.9369 - val_loss: 1.2378 - val_accuracy: 0.7317\n",
            "Epoch 200/200\n",
            "491/491 [==============================] - 1s 3ms/step - loss: 0.1675 - accuracy: 0.9328 - val_loss: 1.2828 - val_accuracy: 0.7480\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "There is no distinct pattern between loss, accuracy, val_loss, and val_accuracy.  The model with 200 epochs is 5.7% more accurate than the model of 100 epochs."
      ],
      "metadata": {
        "id": "zfCpclL1Dipg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Model Performance with Test set\n",
        "accuracies = model.evaluate(X_test, y_test, verbose=1)\n",
        "print('Test Score;', accuracies[0]) \n",
        "print('Test Accuracy:', accuracies[1])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b2nSDgFMEXs2",
        "outputId": "adde95a7-af4a-4edc-8961-7758dbba5113"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5/5 [==============================] - 0s 3ms/step - loss: 1.0299 - accuracy: 0.7532\n",
            "Test Score; 1.0299257040023804\n",
            "Test Accuracy: 0.7532467246055603\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Model Performance with training data\n",
        "accuracies = model.evaluate(X_train, y_train, verbose=1)\n",
        "print('Train Score;', accuracies[0]) \n",
        "print('Train Accuracy:', accuracies[1])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MrWhwM2WEhBn",
        "outputId": "8bf3fe29-6632-4cd7-b33b-fc09459b14ce"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "20/20 [==============================] - 0s 2ms/step - loss: 0.3083 - accuracy: 0.9430\n",
            "Train Score; 0.30830493569374084\n",
            "Train Accuracy: 0.9429967403411865\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Confusion Matrix using Seaborn\n",
        "#Reference https://stackoverflow.com/questions/69875073/confusion-matrix-valueerror-classification-metrics-cant-handle-a-mix-of-binary\n",
        "from sklearn.metrics import confusion_matrix\n",
        "p_pred = model.predict(X_test)\n",
        "p_pred = p_pred.flatten()\n",
        "y_pred = np.where(p_pred > 0.5, 1, 0)\n",
        "cf_matrix = confusion_matrix(y_test, y_pred)\n",
        "sns.heatmap(cf_matrix, annot = True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 284
        },
        "id": "Zm6phjPTdJfa",
        "outputId": "d1616ac5-9bba-40b8-fe24-8aa946972380"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7ff51c398750>"
            ]
          },
          "metadata": {},
          "execution_count": 61
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The accuracy from the confusion matrix is 75.32% which the exact \n",
        "test accuracy above.  The Precision (.6607) and Recall (.6607) leads to a F1 score of .6607 which means each case is properly classified 66.07% of the time."
      ],
      "metadata": {
        "id": "A8Sm_0TbepTa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#provide the ROC graph\n",
        "#Reference https://www.statology.org/plot-roc-curve-python/\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn import metrics\n",
        "log_regression = LogisticRegression()\n",
        "log_regression.fit(X_train,y_train)\n",
        "y_pred_proba = log_regression.predict_proba(X_test)[::,1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test,  y_pred_proba)\n",
        "plt.plot(fpr,tpr)\n",
        "plt.ylabel('True Positive Rate')\n",
        "plt.xlabel('False Positive Rate')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "kDiXQRAM11gO",
        "outputId": "f9123804-4d7c-4739-da80-b9497f72f131"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'False Positive Rate')"
            ]
          },
          "metadata": {},
          "execution_count": 62
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Find the area under the curve\n",
        "auc = metrics.roc_auc_score(y_test, y_pred_proba)\n",
        "print(auc)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "P82TnZbT2i4O",
        "outputId": "838bdc1e-2eaa-4533-d3a8-b9d8be4ec279"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.850765306122449\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Under normal circumstances, the AUC score is considered acceptable discrimination.  But since this model deals with a medical problem, we are looking for an AUC score of .95, so this AUC score is considered unacceptable.\n",
        "\n",
        "https://www.statology.org/what-is-a-good-auc-score/"
      ],
      "metadata": {
        "id": "aDRT-VF13g30"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install lazypredict\n",
        "import lazypredict\n",
        "from lazypredict.Supervised import LazyClassifier\n",
        "clf = LazyClassifier(predictions=True)\n",
        "models, predictions = clf.fit(X_train, X_test, y_train, y_test)\n",
        "print(models, predictions)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rn1HuV6ppW6N",
        "outputId": "8d4a4de5-b418-44fe-bbc8-4f7a1a9ccb4c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: lazypredict in /usr/local/lib/python3.7/dist-packages (0.2.9)\n",
            "Requirement already satisfied: scikit-learn==0.23.1 in /usr/local/lib/python3.7/dist-packages (from lazypredict) (0.23.1)\n",
            "Requirement already satisfied: numpy==1.19.1 in /usr/local/lib/python3.7/dist-packages (from lazypredict) (1.19.1)\n",
            "Requirement already satisfied: pandas==1.0.5 in /usr/local/lib/python3.7/dist-packages (from lazypredict) (1.0.5)\n",
            "Requirement already satisfied: PyYAML==5.3.1 in /usr/local/lib/python3.7/dist-packages (from lazypredict) (5.3.1)\n",
            "Requirement already satisfied: joblib==1.0.0 in /usr/local/lib/python3.7/dist-packages (from lazypredict) (1.0.0)\n",
            "Requirement already satisfied: lightgbm==2.3.1 in /usr/local/lib/python3.7/dist-packages (from lazypredict) (2.3.1)\n",
            "Requirement already satisfied: xgboost==1.1.1 in /usr/local/lib/python3.7/dist-packages (from lazypredict) (1.1.1)\n",
            "Requirement already satisfied: tqdm==4.56.0 in /usr/local/lib/python3.7/dist-packages (from lazypredict) (4.56.0)\n",
            "Requirement already satisfied: six==1.15.0 in /usr/local/lib/python3.7/dist-packages (from lazypredict) (1.15.0)\n",
            "Requirement already satisfied: click==7.1.2 in /usr/local/lib/python3.7/dist-packages (from lazypredict) (7.1.2)\n",
            "Requirement already satisfied: pytest==5.4.3 in /usr/local/lib/python3.7/dist-packages (from lazypredict) (5.4.3)\n",
            "Requirement already satisfied: scipy==1.5.4 in /usr/local/lib/python3.7/dist-packages (from lazypredict) (1.5.4)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas==1.0.5->lazypredict) (2018.9)\n",
            "Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.7/dist-packages (from pandas==1.0.5->lazypredict) (2.8.2)\n",
            "Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.7/dist-packages (from pytest==5.4.3->lazypredict) (21.4.0)\n",
            "Requirement already satisfied: more-itertools>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from pytest==5.4.3->lazypredict) (8.12.0)\n",
            "Requirement already satisfied: pluggy<1.0,>=0.12 in /usr/local/lib/python3.7/dist-packages (from pytest==5.4.3->lazypredict) (0.13.1)\n",
            "Requirement already satisfied: py>=1.5.0 in /usr/local/lib/python3.7/dist-packages (from pytest==5.4.3->lazypredict) (1.11.0)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from pytest==5.4.3->lazypredict) (0.2.5)\n",
            "Requirement already satisfied: importlib-metadata>=0.12 in /usr/local/lib/python3.7/dist-packages (from pytest==5.4.3->lazypredict) (4.11.3)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from pytest==5.4.3->lazypredict) (21.3)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn==0.23.1->lazypredict) (3.1.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=0.12->pytest==5.4.3->lazypredict) (3.8.0)\n",
            "Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=0.12->pytest==5.4.3->lazypredict) (4.1.1)\n",
            "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->pytest==5.4.3->lazypredict) (3.0.8)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 29/29 [00:02<00:00, 14.23it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                               Accuracy  Balanced Accuracy  ROC AUC  F1 Score  \\\n",
            "Model                                                                           \n",
            "QuadraticDiscriminantAnalysis      0.77               0.75     0.75      0.77   \n",
            "GaussianNB                         0.75               0.74     0.74      0.76   \n",
            "LGBMClassifier                     0.74               0.73     0.73      0.74   \n",
            "SGDClassifier                      0.73               0.73     0.73      0.73   \n",
            "ExtraTreesClassifier               0.75               0.73     0.73      0.75   \n",
            "RandomForestClassifier             0.75               0.73     0.73      0.75   \n",
            "XGBClassifier                      0.73               0.73     0.73      0.74   \n",
            "SVC                                0.75               0.73     0.73      0.75   \n",
            "Perceptron                         0.73               0.72     0.72      0.74   \n",
            "NuSVC                              0.75               0.72     0.72      0.75   \n",
            "LogisticRegression                 0.75               0.72     0.72      0.75   \n",
            "RidgeClassifierCV                  0.75               0.72     0.72      0.75   \n",
            "RidgeClassifier                    0.75               0.72     0.72      0.75   \n",
            "LinearSVC                          0.75               0.72     0.72      0.75   \n",
            "LinearDiscriminantAnalysis         0.75               0.72     0.72      0.75   \n",
            "CalibratedClassifierCV             0.75               0.72     0.72      0.75   \n",
            "NearestCentroid                    0.70               0.72     0.72      0.71   \n",
            "KNeighborsClassifier               0.72               0.71     0.71      0.72   \n",
            "PassiveAggressiveClassifier        0.71               0.71     0.71      0.71   \n",
            "LabelSpreading                     0.69               0.68     0.68      0.69   \n",
            "LabelPropagation                   0.69               0.68     0.68      0.69   \n",
            "ExtraTreeClassifier                0.68               0.68     0.68      0.69   \n",
            "BernoulliNB                        0.68               0.68     0.68      0.69   \n",
            "DecisionTreeClassifier             0.68               0.66     0.66      0.68   \n",
            "BaggingClassifier                  0.69               0.66     0.66      0.69   \n",
            "AdaBoostClassifier                 0.66               0.65     0.65      0.67   \n",
            "DummyClassifier                    0.53               0.48     0.48      0.52   \n",
            "\n",
            "                               Time Taken  \n",
            "Model                                      \n",
            "QuadraticDiscriminantAnalysis        0.02  \n",
            "GaussianNB                           0.02  \n",
            "LGBMClassifier                       0.11  \n",
            "SGDClassifier                        0.02  \n",
            "ExtraTreesClassifier                 0.19  \n",
            "RandomForestClassifier               0.25  \n",
            "XGBClassifier                        0.09  \n",
            "SVC                                  0.03  \n",
            "Perceptron                           0.02  \n",
            "NuSVC                                0.03  \n",
            "LogisticRegression                   0.03  \n",
            "RidgeClassifierCV                    0.02  \n",
            "RidgeClassifier                      0.02  \n",
            "LinearSVC                            0.06  \n",
            "LinearDiscriminantAnalysis           0.03  \n",
            "CalibratedClassifierCV               0.14  \n",
            "NearestCentroid                      0.02  \n",
            "KNeighborsClassifier                 0.02  \n",
            "PassiveAggressiveClassifier          0.02  \n",
            "LabelSpreading                       0.07  \n",
            "LabelPropagation                     0.05  \n",
            "ExtraTreeClassifier                  0.02  \n",
            "BernoulliNB                          0.02  \n",
            "DecisionTreeClassifier               0.02  \n",
            "BaggingClassifier                    0.53  \n",
            "AdaBoostClassifier                   0.13  \n",
            "DummyClassifier                      0.02        AdaBoostClassifier  BaggingClassifier  BernoulliNB  \\\n",
            "0                     0                  0            0   \n",
            "1                     0                  0            0   \n",
            "2                     0                  0            0   \n",
            "3                     0                  0            1   \n",
            "4                     1                  0            1   \n",
            "..                  ...                ...          ...   \n",
            "149                   1                  1            1   \n",
            "150                   1                  1            1   \n",
            "151                   0                  0            0   \n",
            "152                   1                  0            1   \n",
            "153                   1                  1            1   \n",
            "\n",
            "     CalibratedClassifierCV  DecisionTreeClassifier  DummyClassifier  \\\n",
            "0                         0                       0                0   \n",
            "1                         0                       0                1   \n",
            "2                         0                       0                1   \n",
            "3                         0                       0                0   \n",
            "4                         0                       1                0   \n",
            "..                      ...                     ...              ...   \n",
            "149                       1                       1                0   \n",
            "150                       0                       0                1   \n",
            "151                       0                       0                0   \n",
            "152                       1                       0                0   \n",
            "153                       1                       1                0   \n",
            "\n",
            "     ExtraTreeClassifier  ExtraTreesClassifier  GaussianNB  \\\n",
            "0                      0                     0           0   \n",
            "1                      1                     0           0   \n",
            "2                      0                     0           0   \n",
            "3                      1                     0           1   \n",
            "4                      0                     0           1   \n",
            "..                   ...                   ...         ...   \n",
            "149                    1                     1           1   \n",
            "150                    1                     0           1   \n",
            "151                    0                     0           0   \n",
            "152                    0                     1           1   \n",
            "153                    1                     1           1   \n",
            "\n",
            "     KNeighborsClassifier  ...  PassiveAggressiveClassifier  Perceptron  \\\n",
            "0                       0  ...                            0           0   \n",
            "1                       0  ...                            1           0   \n",
            "2                       0  ...                            1           1   \n",
            "3                       0  ...                            0           1   \n",
            "4                       0  ...                            1           1   \n",
            "..                    ...  ...                          ...         ...   \n",
            "149                     1  ...                            1           0   \n",
            "150                     1  ...                            0           1   \n",
            "151                     0  ...                            0           0   \n",
            "152                     1  ...                            1           1   \n",
            "153                     1  ...                            1           1   \n",
            "\n",
            "     QuadraticDiscriminantAnalysis  RandomForestClassifier  RidgeClassifier  \\\n",
            "0                                0                       0                0   \n",
            "1                                0                       0                0   \n",
            "2                                0                       0                0   \n",
            "3                                1                       0                0   \n",
            "4                                0                       1                0   \n",
            "..                             ...                     ...              ...   \n",
            "149                              1                       1                1   \n",
            "150                              1                       0                0   \n",
            "151                              0                       0                0   \n",
            "152                              0                       1                1   \n",
            "153                              1                       1                1   \n",
            "\n",
            "     RidgeClassifierCV  SGDClassifier  SVC  XGBClassifier  LGBMClassifier  \n",
            "0                    0              0    0              0               0  \n",
            "1                    0              0    0              0               0  \n",
            "2                    0              0    0              0               0  \n",
            "3                    0              1    0              0               0  \n",
            "4                    0              0    0              0               0  \n",
            "..                 ...            ...  ...            ...             ...  \n",
            "149                  1              1    1              1               1  \n",
            "150                  0              1    0              0               0  \n",
            "151                  0              0    0              0               0  \n",
            "152                  1              1    1              1               1  \n",
            "153                  1              1    1              1               1  \n",
            "\n",
            "[154 rows x 27 columns]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The logistic regression and Random Forest model (75%) are less accurate than the model above, which has a 75.32% accuracy."
      ],
      "metadata": {
        "id": "-D4aUjsvyZye"
      }
    }
  ]
}